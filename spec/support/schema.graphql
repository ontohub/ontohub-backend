type Organization implements OrganizationalUnit {
  # Description of the organization
  description: String

  # Display name of the organization
  displayName: String

  # ID of the organization
  id: ID!
  members(
    # Maximum number of members
    limit: Int = 20

    # Skip the first n members
    skip: Int = 0
  ): [User]!
}

interface OrganizationalUnit {
  displayName: String
  id: ID!
}

type Query {
  # The organizational unit for the given ID
  organizationalUnit(id: ID!): OrganizationalUnit

  # The version of the backend
  version: Version!
}

type User implements OrganizationalUnit {
  # Display name of the user
  displayName: String

  # Email address of the user
  email: String

  # MD5 hash of the user's email address
  emailHash: String!

  # ID of the user
  id: ID!
  organizations(
    # Maximum number of organizations
    limit: Int = 20

    # Skip the first n organizations
    skip: Int = 0
  ): [Organization]!
}

type Version {
  # Short git hash of the deployed version
  commit: String!

  # Amount of commits since the last version bump
  commitsSinceTag: Int!

  # Full version as generated by `git describe --long --tags`
  full: String!

  # Last published version
  tag: String!
}